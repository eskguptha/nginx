server {
    listen 80;
     #server_name  localhost;
    listen [::]:80;
    server_name example.com;
    return 301 https://example.com$request_uri;
 }

server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name example.com;
        client_max_body_size 20M;
        ssl_certificate  /etc/letsencrypt/live/example.com/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/example.com/privkey.pem;
        ssl on;
        location /static {
           root  /home/administrator/projects/newapp;
        }
        location /media {
              root  /home/administrator/projects/newapp;

        }
    location /services/  {
        rewrite ^/face_api/(.*)$ /$1 break;
        proxy_pass http://127.0.0.1:8085;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
 location /reports  {
        proxy_pass http://192.168.20.87:8001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
      }


        location / {
            # WebSocket support (nginx 1.4)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            add_header Last-Modified $date_gmt;
            #proxy_set_header Host $host;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
              expires off;
              etag off;
            if ($http_upgrade = "websocket") {
                  proxy_pass http://127.0.0.1:8041;
                }
                   if ($http_upgrade != "websocket") {
                proxy_pass http://127.0.0.1:8042;
               }
       }
}
